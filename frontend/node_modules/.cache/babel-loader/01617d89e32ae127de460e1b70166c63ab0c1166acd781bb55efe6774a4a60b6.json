{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chand\\\\intenship\\\\frontend\\\\src\\\\pages\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [msg, setMsg] = useState('');\n  const token = localStorage.getItem('token');\n  const submit = async e => {\n    e.preventDefault();\n    if (!file) return setMsg('Select a file first');\n    const fd = new FormData();\n    fd.append('file', file);\n    try {\n      const res = await axios.post((process.env.REACT_APP_API_URL || 'http://localhost:5000') + '/api/upload', fd, {\n        headers: {\n          Authorization: 'Bearer ' + token,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Upload response:', res.data);\n      setMsg(res.data.message);\n      // optional: reload after some delay if needed\n      // setTimeout(() => window.location.reload(), 1000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Upload error:', err.response || err);\n      setMsg(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Upload failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      padding: '20px',\n      maxWidth: '400px',\n      margin: '20px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv,.xlsx,.xls\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Upload & Distribute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '10px',\n        color: 'green'\n      },\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12,\n        marginTop: '5px'\n      },\n      children: \"CSV must have columns: FirstName, Phone, Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"eM9AwOi1etSUbIbeEENkwcNdrUc=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Upload","_s","file","setFile","msg","setMsg","token","localStorage","getItem","submit","e","preventDefault","fd","FormData","append","res","post","process","env","REACT_APP_API_URL","headers","Authorization","console","log","data","message","err","_err$response","_err$response$data","error","response","className","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","target","files","marginTop","color","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/chand/intenship/frontend/src/pages/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function Upload() {\n  const [file, setFile] = useState(null);\n  const [msg, setMsg] = useState('');\n  const token = localStorage.getItem('token');\n\n  const submit = async (e) => {\n    e.preventDefault();\n\n    if (!file) return setMsg('Select a file first');\n\n    const fd = new FormData();\n    fd.append('file', file);\n\n    try {\n      const res = await axios.post(\n        (process.env.REACT_APP_API_URL || 'http://localhost:5000') + '/api/upload',\n        fd,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n            'Content-Type': 'multipart/form-data',\n          },\n        }\n      );\n\n      console.log('Upload response:', res.data);\n      setMsg(res.data.message);\n      // optional: reload after some delay if needed\n      // setTimeout(() => window.location.reload(), 1000);\n    } catch (err) {\n      console.error('Upload error:', err.response || err);\n      setMsg(err.response?.data?.message || 'Upload failed');\n    }\n  };\n\n  return (\n    <div className=\"card\" style={{ padding: '20px', maxWidth: '400px', margin: '20px auto' }}>\n      <h3>Upload CSV</h3>\n      <form onSubmit={submit}>\n        <input\n          type=\"file\"\n          accept=\".csv,.xlsx,.xls\"\n          onChange={(e) => setFile(e.target.files[0])}\n        />\n        <button type=\"submit\" style={{ marginTop: '10px' }}>\n          Upload & Distribute\n        </button>\n      </form>\n      {msg && <p style={{ marginTop: '10px', color: 'green' }}>{msg}</p>}\n      <p style={{ fontSize: 12, marginTop: '5px' }}>\n        CSV must have columns: FirstName, Phone, Notes\n      </p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}